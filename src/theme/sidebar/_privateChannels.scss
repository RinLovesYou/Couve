@use 'backend' as *;

#{c(sidebar private searchBar)} {
  position: absolute;
  top: 0;
  left: 0;
  width: calc(100%);
  background: linear-gradient(180deg, var(--background-secondary), transparent);
  box-shadow: none;
  border-bottom: 0;

  #{c(button lookFilled)} {
    background: var(--background-primary) !important;
    //font-size: 10px;
    text-align: center;
  }
}

#{c(header addFriend)} {
  background-color: var(--main-color) !important;
}

#{c(sidebar list)} {
  border-color: transparent;
}

#{c(sidebar private channels)} {
  background: var(--background-secondary);
}

#{c(sidebar private channels)} > #{c(sidebar private scroller)} {
  background: var(--background-secondary);
  padding-top: 48px;
  margin: 0;
  margin-bottom: 70px;

  &::-webkit-scrollbar {
    display: none;
  }
}

#{c(sidebar private channel)} {
  background: var(--background-secondary);
  margin: 0;
  max-width: unset;
  border-radius: 0;

  #{c(sidebar private layout)} {
    padding: 0 22px;
    width: calc(100% - 22px);
    border-radius: 0;
  }
}

#{c(main page)} {
  background-color: var(--background-tertiary);
}

// wide friends list
#{c(friends container)} {
  background: var(--background-primary);
  border-top: none !important;
  border-width: 0;
  //it's just ever so slightly off, i hate it
  margin-top: 1px;
}

#{c(header header)} {
  border-color: transparent;
}

#{c(friends actionButton)} {
  background: transparent;

  &:hover {
    background: var(--background-primary);
  }
}

#{c(friends peopleColumn)} ::-webkit-scrollbar {
  display: none;
}

#{c(friends tabBody)}::before {
  content: none;
}

//friend activities
#{c(friends nowPlayingColumn)} {
  background: transparent;
  margin: 3px 0 10px 0;
}

#{c(friends peopleListItem)} {
  border: 0;
}

#{c(friends nowPlayingContainer)} {
  background: var(--background-secondary);
  border-radius: 15px 0 0 15px;
}

#{c(friends nowPlayingScroller)} {
  border: none;
  padding: 16px 0 !important;
  margin: 0;

  &::-webkit-scrollbar {
    display: none;
  }
}

#{c(friends nowPlayingHeader)} {
  text-align: center;
}

#{c(friends emptyCard)} {
  margin: 16px;
}

#{c(friends itemCard)} {
  background: var(--background-secondary);
  margin: 16px;
  border-radius: 10px;
  border: none;
}

#{c(friends itemCardBody)} {
  & > :nth-last-child(3) {
    border-radius: 8px 8px 0 0;
  }
  #{c(friends itemCardSeparator)} {
    display: none;
  }
  & > :nth-child(3) {
    border-radius: 0 0 8px 8px;
  }
}

#{c(header akaBadge)} {
  background: var(--main-color);
  color: #fff;
}

//user profile
#{c(profile outer)}:is(.user-profile-sidebar) {
  overflow: unset;

  #{c(profile inner)} {
    overflow: unset;
  }

  // Banner
  #{c(profile header)} {
    min-height: 210px;
  }

  #{c(profile header)} > #{c(profile banner mask)} {
    overflow: visible;
    min-height: unset !important;
    contain: unset;

    #{c(profile banner banner)} {
      position: absolute;
      height: 200px !important;
      -webkit-mask-image: linear-gradient(#000000c2, #000000c2);
      mask-image: linear-gradient(#000000c2, #000000c2);
      clip-path: polygon(0 0, 100% 0, 100% calc(100% - 35px), 50% 100%, 0 calc(100% - 35px));
    }

    & > foreignObject {
      mask: none;
    }
  }

  // Action buttons
  #{c(profile firendsMoreEditProfileButtons wrapper)} {
    flex-direction: column;
  }

  // status
  #{c(profile status container)} {
    top: unset;
    right: unset;
    left: unset;
    bottom: -50px;
    z-index: 2;
    border: 0;
    box-sizing: border-box;
    background: var(--user-profile-overlay-background);
    border-radius: var(--radius-sm);
    padding: 12px;
    margin: 0 16px;
    width: 308px;
    display: grid;
    justify-content: left;
    & > #{c(profile status outer)} {
      border: none;
      box-shadow: none;
      background: transparent;
      min-width: unset;
      max-width: unset;
      border-radius: 0;

      &::before,
      &::after {
        display: none;
      }

      & > #{c(profile status inner)} {
        padding: 0;
        background: transparent;

        & > #{c(profile status content)} {
          display: flex;
          #{c(text text sm normal)} {
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            display: inline-block;
            max-width: 270px;
          }
        }
      }
    }
  }

  #{c(profile status outer)} {
    &::before,
    &::after {
      display: none;
    }
  }

  // Avatar
  #{c(profile avatar avatar)} {
    top: 15px !important;
    left: calc(50% - 40px) !important;

    #{c(profile avatar overlay)}:after {
      border-radius: var(--avatar-radius);
    }

    // View profile mask
    #{c(profile avatar popover)} {
      top: 0;
      left: 0;
      border-radius: calc(var(--avatar-radius) * 2) !important;

      foreignObject {
        mask: none !important;
      }
    }
  }

  // Avatar mask
  #{c(avatar mask)} {
    foreignObject {
      border-radius: calc(var(--avatar-radius) * 2) !important;
    }

    circle,
    rect[fill='black'] {
      display: none;
    }
  }

  #{c(profile body)} {
    position: static;
  }

  &:has(#{c(profile status container)}) {
    #{c(profile body)} {
      padding-top: 52px;
    }
  }

  // Username
  #{c(profile username container)} {
    position: absolute;
    top: 105px;
    left: 20px;
    width: calc(100% - 38px);
    text-align: center;
    justify-content: center;
    justify-items: center;
  }

  #{c(profile username usernameRow)} #{c(profile username clickableUsername)} {
    width: 100%;
    h1 {
      display: block;
      text-align: center;
    }
  }

  #{c(profile username usernameRow)} #{c(profile username nicknameIcons)} {
    display: none;
  }

  #{c(profile username usernameRow)} {
    gap: 0;
    flex-direction: column;
  }

  // uuh old name and pronouns and badges and ...
  #{c(profile username tags)} {
    margin-top: 5px;
    justify-content: center;
    flex-direction: row;

    #{c(profile username dotSpacer)} {
      order: -2;
    }

    #{c(profile username clickableUsername)} {
      order: -3;
    }

    // badges
    #{c(profile badgeList)} {
      border: none;
      background: transparent;
    }

    #{c(profile username guildTagContainer)} {
      order: -1;
    }
  }

  &:not(#{c(profile customTheme)}) {
    //any coloring of the profile goes in here to not overwrite custom themes.
    #{c(profile inner)} {
      background: var(--background-tertiary);
    }

    #{c(profile playing card)},
    #{c(profile overlay)},
    #{c(profile status container)} {
      background: var(--background-secondary);
    }
  }
}
